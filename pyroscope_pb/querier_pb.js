// source: querier.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var google_v1_profile_pb = require('./google/v1/profile_pb.js');
goog.object.extend(proto, google_v1_profile_pb);
var types_v1_types_pb = require('./types/v1/types_pb.js');
goog.object.extend(proto, types_v1_types_pb);
goog.exportSymbol('proto.querier.v1.AnalyzeQueryRequest', null, global);
goog.exportSymbol('proto.querier.v1.AnalyzeQueryResponse', null, global);
goog.exportSymbol('proto.querier.v1.DiffRequest', null, global);
goog.exportSymbol('proto.querier.v1.DiffResponse', null, global);
goog.exportSymbol('proto.querier.v1.FlameGraph', null, global);
goog.exportSymbol('proto.querier.v1.FlameGraphDiff', null, global);
goog.exportSymbol('proto.querier.v1.Level', null, global);
goog.exportSymbol('proto.querier.v1.ProfileFormat', null, global);
goog.exportSymbol('proto.querier.v1.ProfileTypesRequest', null, global);
goog.exportSymbol('proto.querier.v1.ProfileTypesResponse', null, global);
goog.exportSymbol('proto.querier.v1.QueryImpact', null, global);
goog.exportSymbol('proto.querier.v1.QueryScope', null, global);
goog.exportSymbol('proto.querier.v1.SelectMergeProfileRequest', null, global);
goog.exportSymbol('proto.querier.v1.SelectMergeSpanProfileRequest', null, global);
goog.exportSymbol('proto.querier.v1.SelectMergeSpanProfileResponse', null, global);
goog.exportSymbol('proto.querier.v1.SelectMergeStacktracesRequest', null, global);
goog.exportSymbol('proto.querier.v1.SelectMergeStacktracesResponse', null, global);
goog.exportSymbol('proto.querier.v1.SelectSeriesRequest', null, global);
goog.exportSymbol('proto.querier.v1.SelectSeriesResponse', null, global);
goog.exportSymbol('proto.querier.v1.SeriesRequest', null, global);
goog.exportSymbol('proto.querier.v1.SeriesResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.querier.v1.ProfileTypesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.querier.v1.ProfileTypesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.querier.v1.ProfileTypesRequest.displayName = 'proto.querier.v1.ProfileTypesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.querier.v1.ProfileTypesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.querier.v1.ProfileTypesResponse.repeatedFields_, null);
};
goog.inherits(proto.querier.v1.ProfileTypesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.querier.v1.ProfileTypesResponse.displayName = 'proto.querier.v1.ProfileTypesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.querier.v1.SeriesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.querier.v1.SeriesRequest.repeatedFields_, null);
};
goog.inherits(proto.querier.v1.SeriesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.querier.v1.SeriesRequest.displayName = 'proto.querier.v1.SeriesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.querier.v1.SeriesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.querier.v1.SeriesResponse.repeatedFields_, null);
};
goog.inherits(proto.querier.v1.SeriesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.querier.v1.SeriesResponse.displayName = 'proto.querier.v1.SeriesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.querier.v1.SelectMergeStacktracesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.querier.v1.SelectMergeStacktracesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.querier.v1.SelectMergeStacktracesRequest.displayName = 'proto.querier.v1.SelectMergeStacktracesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.querier.v1.SelectMergeStacktracesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.querier.v1.SelectMergeStacktracesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.querier.v1.SelectMergeStacktracesResponse.displayName = 'proto.querier.v1.SelectMergeStacktracesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.querier.v1.SelectMergeSpanProfileRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.querier.v1.SelectMergeSpanProfileRequest.repeatedFields_, null);
};
goog.inherits(proto.querier.v1.SelectMergeSpanProfileRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.querier.v1.SelectMergeSpanProfileRequest.displayName = 'proto.querier.v1.SelectMergeSpanProfileRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.querier.v1.SelectMergeSpanProfileResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.querier.v1.SelectMergeSpanProfileResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.querier.v1.SelectMergeSpanProfileResponse.displayName = 'proto.querier.v1.SelectMergeSpanProfileResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.querier.v1.DiffRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.querier.v1.DiffRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.querier.v1.DiffRequest.displayName = 'proto.querier.v1.DiffRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.querier.v1.DiffResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.querier.v1.DiffResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.querier.v1.DiffResponse.displayName = 'proto.querier.v1.DiffResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.querier.v1.FlameGraph = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.querier.v1.FlameGraph.repeatedFields_, null);
};
goog.inherits(proto.querier.v1.FlameGraph, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.querier.v1.FlameGraph.displayName = 'proto.querier.v1.FlameGraph';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.querier.v1.FlameGraphDiff = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.querier.v1.FlameGraphDiff.repeatedFields_, null);
};
goog.inherits(proto.querier.v1.FlameGraphDiff, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.querier.v1.FlameGraphDiff.displayName = 'proto.querier.v1.FlameGraphDiff';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.querier.v1.Level = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.querier.v1.Level.repeatedFields_, null);
};
goog.inherits(proto.querier.v1.Level, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.querier.v1.Level.displayName = 'proto.querier.v1.Level';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.querier.v1.SelectMergeProfileRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.querier.v1.SelectMergeProfileRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.querier.v1.SelectMergeProfileRequest.displayName = 'proto.querier.v1.SelectMergeProfileRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.querier.v1.SelectSeriesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.querier.v1.SelectSeriesRequest.repeatedFields_, null);
};
goog.inherits(proto.querier.v1.SelectSeriesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.querier.v1.SelectSeriesRequest.displayName = 'proto.querier.v1.SelectSeriesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.querier.v1.SelectSeriesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.querier.v1.SelectSeriesResponse.repeatedFields_, null);
};
goog.inherits(proto.querier.v1.SelectSeriesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.querier.v1.SelectSeriesResponse.displayName = 'proto.querier.v1.SelectSeriesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.querier.v1.AnalyzeQueryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.querier.v1.AnalyzeQueryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.querier.v1.AnalyzeQueryRequest.displayName = 'proto.querier.v1.AnalyzeQueryRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.querier.v1.AnalyzeQueryResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.querier.v1.AnalyzeQueryResponse.repeatedFields_, null);
};
goog.inherits(proto.querier.v1.AnalyzeQueryResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.querier.v1.AnalyzeQueryResponse.displayName = 'proto.querier.v1.AnalyzeQueryResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.querier.v1.QueryScope = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.querier.v1.QueryScope, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.querier.v1.QueryScope.displayName = 'proto.querier.v1.QueryScope';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.querier.v1.QueryImpact = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.querier.v1.QueryImpact, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.querier.v1.QueryImpact.displayName = 'proto.querier.v1.QueryImpact';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.querier.v1.ProfileTypesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.querier.v1.ProfileTypesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.querier.v1.ProfileTypesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.querier.v1.ProfileTypesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    start: jspb.Message.getFieldWithDefault(msg, 1, 0),
    end: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.querier.v1.ProfileTypesRequest}
 */
proto.querier.v1.ProfileTypesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.querier.v1.ProfileTypesRequest;
  return proto.querier.v1.ProfileTypesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.querier.v1.ProfileTypesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.querier.v1.ProfileTypesRequest}
 */
proto.querier.v1.ProfileTypesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStart(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEnd(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.querier.v1.ProfileTypesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.querier.v1.ProfileTypesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.querier.v1.ProfileTypesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.querier.v1.ProfileTypesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStart();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getEnd();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * optional int64 start = 1;
 * @return {number}
 */
proto.querier.v1.ProfileTypesRequest.prototype.getStart = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.querier.v1.ProfileTypesRequest} returns this
 */
proto.querier.v1.ProfileTypesRequest.prototype.setStart = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 end = 2;
 * @return {number}
 */
proto.querier.v1.ProfileTypesRequest.prototype.getEnd = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.querier.v1.ProfileTypesRequest} returns this
 */
proto.querier.v1.ProfileTypesRequest.prototype.setEnd = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.querier.v1.ProfileTypesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.querier.v1.ProfileTypesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.querier.v1.ProfileTypesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.querier.v1.ProfileTypesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.querier.v1.ProfileTypesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    profileTypesList: jspb.Message.toObjectList(msg.getProfileTypesList(),
    types_v1_types_pb.ProfileType.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.querier.v1.ProfileTypesResponse}
 */
proto.querier.v1.ProfileTypesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.querier.v1.ProfileTypesResponse;
  return proto.querier.v1.ProfileTypesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.querier.v1.ProfileTypesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.querier.v1.ProfileTypesResponse}
 */
proto.querier.v1.ProfileTypesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new types_v1_types_pb.ProfileType;
      reader.readMessage(value,types_v1_types_pb.ProfileType.deserializeBinaryFromReader);
      msg.addProfileTypes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.querier.v1.ProfileTypesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.querier.v1.ProfileTypesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.querier.v1.ProfileTypesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.querier.v1.ProfileTypesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProfileTypesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      types_v1_types_pb.ProfileType.serializeBinaryToWriter
    );
  }
};


/**
 * repeated types.v1.ProfileType profile_types = 1;
 * @return {!Array<!proto.types.v1.ProfileType>}
 */
proto.querier.v1.ProfileTypesResponse.prototype.getProfileTypesList = function() {
  return /** @type{!Array<!proto.types.v1.ProfileType>} */ (
    jspb.Message.getRepeatedWrapperField(this, types_v1_types_pb.ProfileType, 1));
};


/**
 * @param {!Array<!proto.types.v1.ProfileType>} value
 * @return {!proto.querier.v1.ProfileTypesResponse} returns this
*/
proto.querier.v1.ProfileTypesResponse.prototype.setProfileTypesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.types.v1.ProfileType=} opt_value
 * @param {number=} opt_index
 * @return {!proto.types.v1.ProfileType}
 */
proto.querier.v1.ProfileTypesResponse.prototype.addProfileTypes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.types.v1.ProfileType, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.querier.v1.ProfileTypesResponse} returns this
 */
proto.querier.v1.ProfileTypesResponse.prototype.clearProfileTypesList = function() {
  return this.setProfileTypesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.querier.v1.SeriesRequest.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.querier.v1.SeriesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.querier.v1.SeriesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.querier.v1.SeriesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.querier.v1.SeriesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    matchersList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    labelNamesList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    start: jspb.Message.getFieldWithDefault(msg, 3, 0),
    end: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.querier.v1.SeriesRequest}
 */
proto.querier.v1.SeriesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.querier.v1.SeriesRequest;
  return proto.querier.v1.SeriesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.querier.v1.SeriesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.querier.v1.SeriesRequest}
 */
proto.querier.v1.SeriesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addMatchers(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addLabelNames(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStart(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEnd(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.querier.v1.SeriesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.querier.v1.SeriesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.querier.v1.SeriesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.querier.v1.SeriesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMatchersList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getLabelNamesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getStart();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getEnd();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
};


/**
 * repeated string matchers = 1;
 * @return {!Array<string>}
 */
proto.querier.v1.SeriesRequest.prototype.getMatchersList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.querier.v1.SeriesRequest} returns this
 */
proto.querier.v1.SeriesRequest.prototype.setMatchersList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.querier.v1.SeriesRequest} returns this
 */
proto.querier.v1.SeriesRequest.prototype.addMatchers = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.querier.v1.SeriesRequest} returns this
 */
proto.querier.v1.SeriesRequest.prototype.clearMatchersList = function() {
  return this.setMatchersList([]);
};


/**
 * repeated string label_names = 2;
 * @return {!Array<string>}
 */
proto.querier.v1.SeriesRequest.prototype.getLabelNamesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.querier.v1.SeriesRequest} returns this
 */
proto.querier.v1.SeriesRequest.prototype.setLabelNamesList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.querier.v1.SeriesRequest} returns this
 */
proto.querier.v1.SeriesRequest.prototype.addLabelNames = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.querier.v1.SeriesRequest} returns this
 */
proto.querier.v1.SeriesRequest.prototype.clearLabelNamesList = function() {
  return this.setLabelNamesList([]);
};


/**
 * optional int64 start = 3;
 * @return {number}
 */
proto.querier.v1.SeriesRequest.prototype.getStart = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.querier.v1.SeriesRequest} returns this
 */
proto.querier.v1.SeriesRequest.prototype.setStart = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 end = 4;
 * @return {number}
 */
proto.querier.v1.SeriesRequest.prototype.getEnd = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.querier.v1.SeriesRequest} returns this
 */
proto.querier.v1.SeriesRequest.prototype.setEnd = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.querier.v1.SeriesResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.querier.v1.SeriesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.querier.v1.SeriesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.querier.v1.SeriesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.querier.v1.SeriesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    labelsSetList: jspb.Message.toObjectList(msg.getLabelsSetList(),
    types_v1_types_pb.Labels.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.querier.v1.SeriesResponse}
 */
proto.querier.v1.SeriesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.querier.v1.SeriesResponse;
  return proto.querier.v1.SeriesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.querier.v1.SeriesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.querier.v1.SeriesResponse}
 */
proto.querier.v1.SeriesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new types_v1_types_pb.Labels;
      reader.readMessage(value,types_v1_types_pb.Labels.deserializeBinaryFromReader);
      msg.addLabelsSet(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.querier.v1.SeriesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.querier.v1.SeriesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.querier.v1.SeriesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.querier.v1.SeriesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLabelsSetList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      types_v1_types_pb.Labels.serializeBinaryToWriter
    );
  }
};


/**
 * repeated types.v1.Labels labels_set = 2;
 * @return {!Array<!proto.types.v1.Labels>}
 */
proto.querier.v1.SeriesResponse.prototype.getLabelsSetList = function() {
  return /** @type{!Array<!proto.types.v1.Labels>} */ (
    jspb.Message.getRepeatedWrapperField(this, types_v1_types_pb.Labels, 2));
};


/**
 * @param {!Array<!proto.types.v1.Labels>} value
 * @return {!proto.querier.v1.SeriesResponse} returns this
*/
proto.querier.v1.SeriesResponse.prototype.setLabelsSetList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.types.v1.Labels=} opt_value
 * @param {number=} opt_index
 * @return {!proto.types.v1.Labels}
 */
proto.querier.v1.SeriesResponse.prototype.addLabelsSet = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.types.v1.Labels, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.querier.v1.SeriesResponse} returns this
 */
proto.querier.v1.SeriesResponse.prototype.clearLabelsSetList = function() {
  return this.setLabelsSetList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.querier.v1.SelectMergeStacktracesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.querier.v1.SelectMergeStacktracesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.querier.v1.SelectMergeStacktracesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.querier.v1.SelectMergeStacktracesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    profileTypeid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    labelSelector: jspb.Message.getFieldWithDefault(msg, 2, ""),
    start: jspb.Message.getFieldWithDefault(msg, 3, 0),
    end: jspb.Message.getFieldWithDefault(msg, 4, 0),
    maxNodes: jspb.Message.getFieldWithDefault(msg, 5, 0),
    format: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.querier.v1.SelectMergeStacktracesRequest}
 */
proto.querier.v1.SelectMergeStacktracesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.querier.v1.SelectMergeStacktracesRequest;
  return proto.querier.v1.SelectMergeStacktracesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.querier.v1.SelectMergeStacktracesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.querier.v1.SelectMergeStacktracesRequest}
 */
proto.querier.v1.SelectMergeStacktracesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProfileTypeid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabelSelector(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStart(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEnd(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMaxNodes(value);
      break;
    case 6:
      var value = /** @type {!proto.querier.v1.ProfileFormat} */ (reader.readEnum());
      msg.setFormat(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.querier.v1.SelectMergeStacktracesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.querier.v1.SelectMergeStacktracesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.querier.v1.SelectMergeStacktracesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.querier.v1.SelectMergeStacktracesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProfileTypeid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLabelSelector();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getStart();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getEnd();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getFormat();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
};


/**
 * optional string profile_typeID = 1;
 * @return {string}
 */
proto.querier.v1.SelectMergeStacktracesRequest.prototype.getProfileTypeid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.querier.v1.SelectMergeStacktracesRequest} returns this
 */
proto.querier.v1.SelectMergeStacktracesRequest.prototype.setProfileTypeid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string label_selector = 2;
 * @return {string}
 */
proto.querier.v1.SelectMergeStacktracesRequest.prototype.getLabelSelector = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.querier.v1.SelectMergeStacktracesRequest} returns this
 */
proto.querier.v1.SelectMergeStacktracesRequest.prototype.setLabelSelector = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 start = 3;
 * @return {number}
 */
proto.querier.v1.SelectMergeStacktracesRequest.prototype.getStart = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.querier.v1.SelectMergeStacktracesRequest} returns this
 */
proto.querier.v1.SelectMergeStacktracesRequest.prototype.setStart = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 end = 4;
 * @return {number}
 */
proto.querier.v1.SelectMergeStacktracesRequest.prototype.getEnd = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.querier.v1.SelectMergeStacktracesRequest} returns this
 */
proto.querier.v1.SelectMergeStacktracesRequest.prototype.setEnd = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 max_nodes = 5;
 * @return {number}
 */
proto.querier.v1.SelectMergeStacktracesRequest.prototype.getMaxNodes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.querier.v1.SelectMergeStacktracesRequest} returns this
 */
proto.querier.v1.SelectMergeStacktracesRequest.prototype.setMaxNodes = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.querier.v1.SelectMergeStacktracesRequest} returns this
 */
proto.querier.v1.SelectMergeStacktracesRequest.prototype.clearMaxNodes = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.querier.v1.SelectMergeStacktracesRequest.prototype.hasMaxNodes = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional ProfileFormat format = 6;
 * @return {!proto.querier.v1.ProfileFormat}
 */
proto.querier.v1.SelectMergeStacktracesRequest.prototype.getFormat = function() {
  return /** @type {!proto.querier.v1.ProfileFormat} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.querier.v1.ProfileFormat} value
 * @return {!proto.querier.v1.SelectMergeStacktracesRequest} returns this
 */
proto.querier.v1.SelectMergeStacktracesRequest.prototype.setFormat = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.querier.v1.SelectMergeStacktracesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.querier.v1.SelectMergeStacktracesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.querier.v1.SelectMergeStacktracesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.querier.v1.SelectMergeStacktracesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    flamegraph: (f = msg.getFlamegraph()) && proto.querier.v1.FlameGraph.toObject(includeInstance, f),
    tree: msg.getTree_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.querier.v1.SelectMergeStacktracesResponse}
 */
proto.querier.v1.SelectMergeStacktracesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.querier.v1.SelectMergeStacktracesResponse;
  return proto.querier.v1.SelectMergeStacktracesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.querier.v1.SelectMergeStacktracesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.querier.v1.SelectMergeStacktracesResponse}
 */
proto.querier.v1.SelectMergeStacktracesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.querier.v1.FlameGraph;
      reader.readMessage(value,proto.querier.v1.FlameGraph.deserializeBinaryFromReader);
      msg.setFlamegraph(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTree(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.querier.v1.SelectMergeStacktracesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.querier.v1.SelectMergeStacktracesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.querier.v1.SelectMergeStacktracesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.querier.v1.SelectMergeStacktracesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFlamegraph();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.querier.v1.FlameGraph.serializeBinaryToWriter
    );
  }
  f = message.getTree_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
};


/**
 * optional FlameGraph flamegraph = 1;
 * @return {?proto.querier.v1.FlameGraph}
 */
proto.querier.v1.SelectMergeStacktracesResponse.prototype.getFlamegraph = function() {
  return /** @type{?proto.querier.v1.FlameGraph} */ (
    jspb.Message.getWrapperField(this, proto.querier.v1.FlameGraph, 1));
};


/**
 * @param {?proto.querier.v1.FlameGraph|undefined} value
 * @return {!proto.querier.v1.SelectMergeStacktracesResponse} returns this
*/
proto.querier.v1.SelectMergeStacktracesResponse.prototype.setFlamegraph = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.querier.v1.SelectMergeStacktracesResponse} returns this
 */
proto.querier.v1.SelectMergeStacktracesResponse.prototype.clearFlamegraph = function() {
  return this.setFlamegraph(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.querier.v1.SelectMergeStacktracesResponse.prototype.hasFlamegraph = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bytes tree = 2;
 * @return {!(string|Uint8Array)}
 */
proto.querier.v1.SelectMergeStacktracesResponse.prototype.getTree = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes tree = 2;
 * This is a type-conversion wrapper around `getTree()`
 * @return {string}
 */
proto.querier.v1.SelectMergeStacktracesResponse.prototype.getTree_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTree()));
};


/**
 * optional bytes tree = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTree()`
 * @return {!Uint8Array}
 */
proto.querier.v1.SelectMergeStacktracesResponse.prototype.getTree_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTree()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.querier.v1.SelectMergeStacktracesResponse} returns this
 */
proto.querier.v1.SelectMergeStacktracesResponse.prototype.setTree = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.querier.v1.SelectMergeSpanProfileRequest.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.querier.v1.SelectMergeSpanProfileRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.querier.v1.SelectMergeSpanProfileRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.querier.v1.SelectMergeSpanProfileRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.querier.v1.SelectMergeSpanProfileRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    profileTypeid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    labelSelector: jspb.Message.getFieldWithDefault(msg, 2, ""),
    spanSelectorList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    start: jspb.Message.getFieldWithDefault(msg, 4, 0),
    end: jspb.Message.getFieldWithDefault(msg, 5, 0),
    maxNodes: jspb.Message.getFieldWithDefault(msg, 6, 0),
    format: jspb.Message.getFieldWithDefault(msg, 7, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.querier.v1.SelectMergeSpanProfileRequest}
 */
proto.querier.v1.SelectMergeSpanProfileRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.querier.v1.SelectMergeSpanProfileRequest;
  return proto.querier.v1.SelectMergeSpanProfileRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.querier.v1.SelectMergeSpanProfileRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.querier.v1.SelectMergeSpanProfileRequest}
 */
proto.querier.v1.SelectMergeSpanProfileRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProfileTypeid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabelSelector(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addSpanSelector(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStart(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEnd(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMaxNodes(value);
      break;
    case 7:
      var value = /** @type {!proto.querier.v1.ProfileFormat} */ (reader.readEnum());
      msg.setFormat(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.querier.v1.SelectMergeSpanProfileRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.querier.v1.SelectMergeSpanProfileRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.querier.v1.SelectMergeSpanProfileRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.querier.v1.SelectMergeSpanProfileRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProfileTypeid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLabelSelector();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSpanSelectorList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getStart();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getEnd();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getFormat();
  if (f !== 0.0) {
    writer.writeEnum(
      7,
      f
    );
  }
};


/**
 * optional string profile_typeID = 1;
 * @return {string}
 */
proto.querier.v1.SelectMergeSpanProfileRequest.prototype.getProfileTypeid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.querier.v1.SelectMergeSpanProfileRequest} returns this
 */
proto.querier.v1.SelectMergeSpanProfileRequest.prototype.setProfileTypeid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string label_selector = 2;
 * @return {string}
 */
proto.querier.v1.SelectMergeSpanProfileRequest.prototype.getLabelSelector = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.querier.v1.SelectMergeSpanProfileRequest} returns this
 */
proto.querier.v1.SelectMergeSpanProfileRequest.prototype.setLabelSelector = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated string span_selector = 3;
 * @return {!Array<string>}
 */
proto.querier.v1.SelectMergeSpanProfileRequest.prototype.getSpanSelectorList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.querier.v1.SelectMergeSpanProfileRequest} returns this
 */
proto.querier.v1.SelectMergeSpanProfileRequest.prototype.setSpanSelectorList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.querier.v1.SelectMergeSpanProfileRequest} returns this
 */
proto.querier.v1.SelectMergeSpanProfileRequest.prototype.addSpanSelector = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.querier.v1.SelectMergeSpanProfileRequest} returns this
 */
proto.querier.v1.SelectMergeSpanProfileRequest.prototype.clearSpanSelectorList = function() {
  return this.setSpanSelectorList([]);
};


/**
 * optional int64 start = 4;
 * @return {number}
 */
proto.querier.v1.SelectMergeSpanProfileRequest.prototype.getStart = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.querier.v1.SelectMergeSpanProfileRequest} returns this
 */
proto.querier.v1.SelectMergeSpanProfileRequest.prototype.setStart = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 end = 5;
 * @return {number}
 */
proto.querier.v1.SelectMergeSpanProfileRequest.prototype.getEnd = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.querier.v1.SelectMergeSpanProfileRequest} returns this
 */
proto.querier.v1.SelectMergeSpanProfileRequest.prototype.setEnd = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int64 max_nodes = 6;
 * @return {number}
 */
proto.querier.v1.SelectMergeSpanProfileRequest.prototype.getMaxNodes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.querier.v1.SelectMergeSpanProfileRequest} returns this
 */
proto.querier.v1.SelectMergeSpanProfileRequest.prototype.setMaxNodes = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.querier.v1.SelectMergeSpanProfileRequest} returns this
 */
proto.querier.v1.SelectMergeSpanProfileRequest.prototype.clearMaxNodes = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.querier.v1.SelectMergeSpanProfileRequest.prototype.hasMaxNodes = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional ProfileFormat format = 7;
 * @return {!proto.querier.v1.ProfileFormat}
 */
proto.querier.v1.SelectMergeSpanProfileRequest.prototype.getFormat = function() {
  return /** @type {!proto.querier.v1.ProfileFormat} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {!proto.querier.v1.ProfileFormat} value
 * @return {!proto.querier.v1.SelectMergeSpanProfileRequest} returns this
 */
proto.querier.v1.SelectMergeSpanProfileRequest.prototype.setFormat = function(value) {
  return jspb.Message.setProto3EnumField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.querier.v1.SelectMergeSpanProfileResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.querier.v1.SelectMergeSpanProfileResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.querier.v1.SelectMergeSpanProfileResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.querier.v1.SelectMergeSpanProfileResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    flamegraph: (f = msg.getFlamegraph()) && proto.querier.v1.FlameGraph.toObject(includeInstance, f),
    tree: msg.getTree_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.querier.v1.SelectMergeSpanProfileResponse}
 */
proto.querier.v1.SelectMergeSpanProfileResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.querier.v1.SelectMergeSpanProfileResponse;
  return proto.querier.v1.SelectMergeSpanProfileResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.querier.v1.SelectMergeSpanProfileResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.querier.v1.SelectMergeSpanProfileResponse}
 */
proto.querier.v1.SelectMergeSpanProfileResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.querier.v1.FlameGraph;
      reader.readMessage(value,proto.querier.v1.FlameGraph.deserializeBinaryFromReader);
      msg.setFlamegraph(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTree(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.querier.v1.SelectMergeSpanProfileResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.querier.v1.SelectMergeSpanProfileResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.querier.v1.SelectMergeSpanProfileResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.querier.v1.SelectMergeSpanProfileResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFlamegraph();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.querier.v1.FlameGraph.serializeBinaryToWriter
    );
  }
  f = message.getTree_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
};


/**
 * optional FlameGraph flamegraph = 1;
 * @return {?proto.querier.v1.FlameGraph}
 */
proto.querier.v1.SelectMergeSpanProfileResponse.prototype.getFlamegraph = function() {
  return /** @type{?proto.querier.v1.FlameGraph} */ (
    jspb.Message.getWrapperField(this, proto.querier.v1.FlameGraph, 1));
};


/**
 * @param {?proto.querier.v1.FlameGraph|undefined} value
 * @return {!proto.querier.v1.SelectMergeSpanProfileResponse} returns this
*/
proto.querier.v1.SelectMergeSpanProfileResponse.prototype.setFlamegraph = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.querier.v1.SelectMergeSpanProfileResponse} returns this
 */
proto.querier.v1.SelectMergeSpanProfileResponse.prototype.clearFlamegraph = function() {
  return this.setFlamegraph(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.querier.v1.SelectMergeSpanProfileResponse.prototype.hasFlamegraph = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bytes tree = 2;
 * @return {!(string|Uint8Array)}
 */
proto.querier.v1.SelectMergeSpanProfileResponse.prototype.getTree = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes tree = 2;
 * This is a type-conversion wrapper around `getTree()`
 * @return {string}
 */
proto.querier.v1.SelectMergeSpanProfileResponse.prototype.getTree_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTree()));
};


/**
 * optional bytes tree = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTree()`
 * @return {!Uint8Array}
 */
proto.querier.v1.SelectMergeSpanProfileResponse.prototype.getTree_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTree()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.querier.v1.SelectMergeSpanProfileResponse} returns this
 */
proto.querier.v1.SelectMergeSpanProfileResponse.prototype.setTree = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.querier.v1.DiffRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.querier.v1.DiffRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.querier.v1.DiffRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.querier.v1.DiffRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    left: (f = msg.getLeft()) && proto.querier.v1.SelectMergeStacktracesRequest.toObject(includeInstance, f),
    right: (f = msg.getRight()) && proto.querier.v1.SelectMergeStacktracesRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.querier.v1.DiffRequest}
 */
proto.querier.v1.DiffRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.querier.v1.DiffRequest;
  return proto.querier.v1.DiffRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.querier.v1.DiffRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.querier.v1.DiffRequest}
 */
proto.querier.v1.DiffRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.querier.v1.SelectMergeStacktracesRequest;
      reader.readMessage(value,proto.querier.v1.SelectMergeStacktracesRequest.deserializeBinaryFromReader);
      msg.setLeft(value);
      break;
    case 2:
      var value = new proto.querier.v1.SelectMergeStacktracesRequest;
      reader.readMessage(value,proto.querier.v1.SelectMergeStacktracesRequest.deserializeBinaryFromReader);
      msg.setRight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.querier.v1.DiffRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.querier.v1.DiffRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.querier.v1.DiffRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.querier.v1.DiffRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLeft();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.querier.v1.SelectMergeStacktracesRequest.serializeBinaryToWriter
    );
  }
  f = message.getRight();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.querier.v1.SelectMergeStacktracesRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional SelectMergeStacktracesRequest left = 1;
 * @return {?proto.querier.v1.SelectMergeStacktracesRequest}
 */
proto.querier.v1.DiffRequest.prototype.getLeft = function() {
  return /** @type{?proto.querier.v1.SelectMergeStacktracesRequest} */ (
    jspb.Message.getWrapperField(this, proto.querier.v1.SelectMergeStacktracesRequest, 1));
};


/**
 * @param {?proto.querier.v1.SelectMergeStacktracesRequest|undefined} value
 * @return {!proto.querier.v1.DiffRequest} returns this
*/
proto.querier.v1.DiffRequest.prototype.setLeft = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.querier.v1.DiffRequest} returns this
 */
proto.querier.v1.DiffRequest.prototype.clearLeft = function() {
  return this.setLeft(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.querier.v1.DiffRequest.prototype.hasLeft = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional SelectMergeStacktracesRequest right = 2;
 * @return {?proto.querier.v1.SelectMergeStacktracesRequest}
 */
proto.querier.v1.DiffRequest.prototype.getRight = function() {
  return /** @type{?proto.querier.v1.SelectMergeStacktracesRequest} */ (
    jspb.Message.getWrapperField(this, proto.querier.v1.SelectMergeStacktracesRequest, 2));
};


/**
 * @param {?proto.querier.v1.SelectMergeStacktracesRequest|undefined} value
 * @return {!proto.querier.v1.DiffRequest} returns this
*/
proto.querier.v1.DiffRequest.prototype.setRight = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.querier.v1.DiffRequest} returns this
 */
proto.querier.v1.DiffRequest.prototype.clearRight = function() {
  return this.setRight(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.querier.v1.DiffRequest.prototype.hasRight = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.querier.v1.DiffResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.querier.v1.DiffResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.querier.v1.DiffResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.querier.v1.DiffResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    flamegraph: (f = msg.getFlamegraph()) && proto.querier.v1.FlameGraphDiff.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.querier.v1.DiffResponse}
 */
proto.querier.v1.DiffResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.querier.v1.DiffResponse;
  return proto.querier.v1.DiffResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.querier.v1.DiffResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.querier.v1.DiffResponse}
 */
proto.querier.v1.DiffResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.querier.v1.FlameGraphDiff;
      reader.readMessage(value,proto.querier.v1.FlameGraphDiff.deserializeBinaryFromReader);
      msg.setFlamegraph(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.querier.v1.DiffResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.querier.v1.DiffResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.querier.v1.DiffResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.querier.v1.DiffResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFlamegraph();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.querier.v1.FlameGraphDiff.serializeBinaryToWriter
    );
  }
};


/**
 * optional FlameGraphDiff flamegraph = 1;
 * @return {?proto.querier.v1.FlameGraphDiff}
 */
proto.querier.v1.DiffResponse.prototype.getFlamegraph = function() {
  return /** @type{?proto.querier.v1.FlameGraphDiff} */ (
    jspb.Message.getWrapperField(this, proto.querier.v1.FlameGraphDiff, 1));
};


/**
 * @param {?proto.querier.v1.FlameGraphDiff|undefined} value
 * @return {!proto.querier.v1.DiffResponse} returns this
*/
proto.querier.v1.DiffResponse.prototype.setFlamegraph = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.querier.v1.DiffResponse} returns this
 */
proto.querier.v1.DiffResponse.prototype.clearFlamegraph = function() {
  return this.setFlamegraph(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.querier.v1.DiffResponse.prototype.hasFlamegraph = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.querier.v1.FlameGraph.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.querier.v1.FlameGraph.prototype.toObject = function(opt_includeInstance) {
  return proto.querier.v1.FlameGraph.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.querier.v1.FlameGraph} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.querier.v1.FlameGraph.toObject = function(includeInstance, msg) {
  var f, obj = {
    namesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    levelsList: jspb.Message.toObjectList(msg.getLevelsList(),
    proto.querier.v1.Level.toObject, includeInstance),
    total: jspb.Message.getFieldWithDefault(msg, 3, 0),
    maxSelf: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.querier.v1.FlameGraph}
 */
proto.querier.v1.FlameGraph.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.querier.v1.FlameGraph;
  return proto.querier.v1.FlameGraph.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.querier.v1.FlameGraph} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.querier.v1.FlameGraph}
 */
proto.querier.v1.FlameGraph.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addNames(value);
      break;
    case 2:
      var value = new proto.querier.v1.Level;
      reader.readMessage(value,proto.querier.v1.Level.deserializeBinaryFromReader);
      msg.addLevels(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTotal(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMaxSelf(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.querier.v1.FlameGraph.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.querier.v1.FlameGraph.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.querier.v1.FlameGraph} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.querier.v1.FlameGraph.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNamesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getLevelsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.querier.v1.Level.serializeBinaryToWriter
    );
  }
  f = message.getTotal();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getMaxSelf();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
};


/**
 * repeated string names = 1;
 * @return {!Array<string>}
 */
proto.querier.v1.FlameGraph.prototype.getNamesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.querier.v1.FlameGraph} returns this
 */
proto.querier.v1.FlameGraph.prototype.setNamesList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.querier.v1.FlameGraph} returns this
 */
proto.querier.v1.FlameGraph.prototype.addNames = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.querier.v1.FlameGraph} returns this
 */
proto.querier.v1.FlameGraph.prototype.clearNamesList = function() {
  return this.setNamesList([]);
};


/**
 * repeated Level levels = 2;
 * @return {!Array<!proto.querier.v1.Level>}
 */
proto.querier.v1.FlameGraph.prototype.getLevelsList = function() {
  return /** @type{!Array<!proto.querier.v1.Level>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.querier.v1.Level, 2));
};


/**
 * @param {!Array<!proto.querier.v1.Level>} value
 * @return {!proto.querier.v1.FlameGraph} returns this
*/
proto.querier.v1.FlameGraph.prototype.setLevelsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.querier.v1.Level=} opt_value
 * @param {number=} opt_index
 * @return {!proto.querier.v1.Level}
 */
proto.querier.v1.FlameGraph.prototype.addLevels = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.querier.v1.Level, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.querier.v1.FlameGraph} returns this
 */
proto.querier.v1.FlameGraph.prototype.clearLevelsList = function() {
  return this.setLevelsList([]);
};


/**
 * optional int64 total = 3;
 * @return {number}
 */
proto.querier.v1.FlameGraph.prototype.getTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.querier.v1.FlameGraph} returns this
 */
proto.querier.v1.FlameGraph.prototype.setTotal = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 max_self = 4;
 * @return {number}
 */
proto.querier.v1.FlameGraph.prototype.getMaxSelf = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.querier.v1.FlameGraph} returns this
 */
proto.querier.v1.FlameGraph.prototype.setMaxSelf = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.querier.v1.FlameGraphDiff.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.querier.v1.FlameGraphDiff.prototype.toObject = function(opt_includeInstance) {
  return proto.querier.v1.FlameGraphDiff.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.querier.v1.FlameGraphDiff} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.querier.v1.FlameGraphDiff.toObject = function(includeInstance, msg) {
  var f, obj = {
    namesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    levelsList: jspb.Message.toObjectList(msg.getLevelsList(),
    proto.querier.v1.Level.toObject, includeInstance),
    total: jspb.Message.getFieldWithDefault(msg, 3, 0),
    maxSelf: jspb.Message.getFieldWithDefault(msg, 4, 0),
    leftticks: jspb.Message.getFieldWithDefault(msg, 5, 0),
    rightticks: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.querier.v1.FlameGraphDiff}
 */
proto.querier.v1.FlameGraphDiff.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.querier.v1.FlameGraphDiff;
  return proto.querier.v1.FlameGraphDiff.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.querier.v1.FlameGraphDiff} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.querier.v1.FlameGraphDiff}
 */
proto.querier.v1.FlameGraphDiff.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addNames(value);
      break;
    case 2:
      var value = new proto.querier.v1.Level;
      reader.readMessage(value,proto.querier.v1.Level.deserializeBinaryFromReader);
      msg.addLevels(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTotal(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMaxSelf(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLeftticks(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRightticks(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.querier.v1.FlameGraphDiff.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.querier.v1.FlameGraphDiff.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.querier.v1.FlameGraphDiff} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.querier.v1.FlameGraphDiff.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNamesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getLevelsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.querier.v1.Level.serializeBinaryToWriter
    );
  }
  f = message.getTotal();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getMaxSelf();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getLeftticks();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getRightticks();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
};


/**
 * repeated string names = 1;
 * @return {!Array<string>}
 */
proto.querier.v1.FlameGraphDiff.prototype.getNamesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.querier.v1.FlameGraphDiff} returns this
 */
proto.querier.v1.FlameGraphDiff.prototype.setNamesList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.querier.v1.FlameGraphDiff} returns this
 */
proto.querier.v1.FlameGraphDiff.prototype.addNames = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.querier.v1.FlameGraphDiff} returns this
 */
proto.querier.v1.FlameGraphDiff.prototype.clearNamesList = function() {
  return this.setNamesList([]);
};


/**
 * repeated Level levels = 2;
 * @return {!Array<!proto.querier.v1.Level>}
 */
proto.querier.v1.FlameGraphDiff.prototype.getLevelsList = function() {
  return /** @type{!Array<!proto.querier.v1.Level>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.querier.v1.Level, 2));
};


/**
 * @param {!Array<!proto.querier.v1.Level>} value
 * @return {!proto.querier.v1.FlameGraphDiff} returns this
*/
proto.querier.v1.FlameGraphDiff.prototype.setLevelsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.querier.v1.Level=} opt_value
 * @param {number=} opt_index
 * @return {!proto.querier.v1.Level}
 */
proto.querier.v1.FlameGraphDiff.prototype.addLevels = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.querier.v1.Level, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.querier.v1.FlameGraphDiff} returns this
 */
proto.querier.v1.FlameGraphDiff.prototype.clearLevelsList = function() {
  return this.setLevelsList([]);
};


/**
 * optional int64 total = 3;
 * @return {number}
 */
proto.querier.v1.FlameGraphDiff.prototype.getTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.querier.v1.FlameGraphDiff} returns this
 */
proto.querier.v1.FlameGraphDiff.prototype.setTotal = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 max_self = 4;
 * @return {number}
 */
proto.querier.v1.FlameGraphDiff.prototype.getMaxSelf = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.querier.v1.FlameGraphDiff} returns this
 */
proto.querier.v1.FlameGraphDiff.prototype.setMaxSelf = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 leftTicks = 5;
 * @return {number}
 */
proto.querier.v1.FlameGraphDiff.prototype.getLeftticks = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.querier.v1.FlameGraphDiff} returns this
 */
proto.querier.v1.FlameGraphDiff.prototype.setLeftticks = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int64 rightTicks = 6;
 * @return {number}
 */
proto.querier.v1.FlameGraphDiff.prototype.getRightticks = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.querier.v1.FlameGraphDiff} returns this
 */
proto.querier.v1.FlameGraphDiff.prototype.setRightticks = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.querier.v1.Level.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.querier.v1.Level.prototype.toObject = function(opt_includeInstance) {
  return proto.querier.v1.Level.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.querier.v1.Level} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.querier.v1.Level.toObject = function(includeInstance, msg) {
  var f, obj = {
    valuesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.querier.v1.Level}
 */
proto.querier.v1.Level.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.querier.v1.Level;
  return proto.querier.v1.Level.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.querier.v1.Level} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.querier.v1.Level}
 */
proto.querier.v1.Level.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt64() : [reader.readInt64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addValues(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.querier.v1.Level.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.querier.v1.Level.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.querier.v1.Level} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.querier.v1.Level.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValuesList();
  if (f.length > 0) {
    writer.writePackedInt64(
      1,
      f
    );
  }
};


/**
 * repeated int64 values = 1;
 * @return {!Array<number>}
 */
proto.querier.v1.Level.prototype.getValuesList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.querier.v1.Level} returns this
 */
proto.querier.v1.Level.prototype.setValuesList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.querier.v1.Level} returns this
 */
proto.querier.v1.Level.prototype.addValues = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.querier.v1.Level} returns this
 */
proto.querier.v1.Level.prototype.clearValuesList = function() {
  return this.setValuesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.querier.v1.SelectMergeProfileRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.querier.v1.SelectMergeProfileRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.querier.v1.SelectMergeProfileRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.querier.v1.SelectMergeProfileRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    profileTypeid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    labelSelector: jspb.Message.getFieldWithDefault(msg, 2, ""),
    start: jspb.Message.getFieldWithDefault(msg, 3, 0),
    end: jspb.Message.getFieldWithDefault(msg, 4, 0),
    maxNodes: jspb.Message.getFieldWithDefault(msg, 5, 0),
    stackTraceSelector: (f = msg.getStackTraceSelector()) && types_v1_types_pb.StackTraceSelector.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.querier.v1.SelectMergeProfileRequest}
 */
proto.querier.v1.SelectMergeProfileRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.querier.v1.SelectMergeProfileRequest;
  return proto.querier.v1.SelectMergeProfileRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.querier.v1.SelectMergeProfileRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.querier.v1.SelectMergeProfileRequest}
 */
proto.querier.v1.SelectMergeProfileRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProfileTypeid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabelSelector(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStart(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEnd(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMaxNodes(value);
      break;
    case 6:
      var value = new types_v1_types_pb.StackTraceSelector;
      reader.readMessage(value,types_v1_types_pb.StackTraceSelector.deserializeBinaryFromReader);
      msg.setStackTraceSelector(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.querier.v1.SelectMergeProfileRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.querier.v1.SelectMergeProfileRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.querier.v1.SelectMergeProfileRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.querier.v1.SelectMergeProfileRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProfileTypeid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLabelSelector();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getStart();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getEnd();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getStackTraceSelector();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      types_v1_types_pb.StackTraceSelector.serializeBinaryToWriter
    );
  }
};


/**
 * optional string profile_typeID = 1;
 * @return {string}
 */
proto.querier.v1.SelectMergeProfileRequest.prototype.getProfileTypeid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.querier.v1.SelectMergeProfileRequest} returns this
 */
proto.querier.v1.SelectMergeProfileRequest.prototype.setProfileTypeid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string label_selector = 2;
 * @return {string}
 */
proto.querier.v1.SelectMergeProfileRequest.prototype.getLabelSelector = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.querier.v1.SelectMergeProfileRequest} returns this
 */
proto.querier.v1.SelectMergeProfileRequest.prototype.setLabelSelector = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 start = 3;
 * @return {number}
 */
proto.querier.v1.SelectMergeProfileRequest.prototype.getStart = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.querier.v1.SelectMergeProfileRequest} returns this
 */
proto.querier.v1.SelectMergeProfileRequest.prototype.setStart = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 end = 4;
 * @return {number}
 */
proto.querier.v1.SelectMergeProfileRequest.prototype.getEnd = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.querier.v1.SelectMergeProfileRequest} returns this
 */
proto.querier.v1.SelectMergeProfileRequest.prototype.setEnd = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 max_nodes = 5;
 * @return {number}
 */
proto.querier.v1.SelectMergeProfileRequest.prototype.getMaxNodes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.querier.v1.SelectMergeProfileRequest} returns this
 */
proto.querier.v1.SelectMergeProfileRequest.prototype.setMaxNodes = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.querier.v1.SelectMergeProfileRequest} returns this
 */
proto.querier.v1.SelectMergeProfileRequest.prototype.clearMaxNodes = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.querier.v1.SelectMergeProfileRequest.prototype.hasMaxNodes = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional types.v1.StackTraceSelector stack_trace_selector = 6;
 * @return {?proto.types.v1.StackTraceSelector}
 */
proto.querier.v1.SelectMergeProfileRequest.prototype.getStackTraceSelector = function() {
  return /** @type{?proto.types.v1.StackTraceSelector} */ (
    jspb.Message.getWrapperField(this, types_v1_types_pb.StackTraceSelector, 6));
};


/**
 * @param {?proto.types.v1.StackTraceSelector|undefined} value
 * @return {!proto.querier.v1.SelectMergeProfileRequest} returns this
*/
proto.querier.v1.SelectMergeProfileRequest.prototype.setStackTraceSelector = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.querier.v1.SelectMergeProfileRequest} returns this
 */
proto.querier.v1.SelectMergeProfileRequest.prototype.clearStackTraceSelector = function() {
  return this.setStackTraceSelector(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.querier.v1.SelectMergeProfileRequest.prototype.hasStackTraceSelector = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.querier.v1.SelectSeriesRequest.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.querier.v1.SelectSeriesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.querier.v1.SelectSeriesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.querier.v1.SelectSeriesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.querier.v1.SelectSeriesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    profileTypeid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    labelSelector: jspb.Message.getFieldWithDefault(msg, 2, ""),
    start: jspb.Message.getFieldWithDefault(msg, 3, 0),
    end: jspb.Message.getFieldWithDefault(msg, 4, 0),
    groupByList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
    step: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    aggregation: jspb.Message.getFieldWithDefault(msg, 7, 0),
    stackTraceSelector: (f = msg.getStackTraceSelector()) && types_v1_types_pb.StackTraceSelector.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.querier.v1.SelectSeriesRequest}
 */
proto.querier.v1.SelectSeriesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.querier.v1.SelectSeriesRequest;
  return proto.querier.v1.SelectSeriesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.querier.v1.SelectSeriesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.querier.v1.SelectSeriesRequest}
 */
proto.querier.v1.SelectSeriesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProfileTypeid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabelSelector(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStart(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEnd(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addGroupBy(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setStep(value);
      break;
    case 7:
      var value = /** @type {!proto.types.v1.TimeSeriesAggregationType} */ (reader.readEnum());
      msg.setAggregation(value);
      break;
    case 8:
      var value = new types_v1_types_pb.StackTraceSelector;
      reader.readMessage(value,types_v1_types_pb.StackTraceSelector.deserializeBinaryFromReader);
      msg.setStackTraceSelector(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.querier.v1.SelectSeriesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.querier.v1.SelectSeriesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.querier.v1.SelectSeriesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.querier.v1.SelectSeriesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProfileTypeid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLabelSelector();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getStart();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getEnd();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getGroupByList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
  f = message.getStep();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = /** @type {!proto.types.v1.TimeSeriesAggregationType} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeEnum(
      7,
      f
    );
  }
  f = message.getStackTraceSelector();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      types_v1_types_pb.StackTraceSelector.serializeBinaryToWriter
    );
  }
};


/**
 * optional string profile_typeID = 1;
 * @return {string}
 */
proto.querier.v1.SelectSeriesRequest.prototype.getProfileTypeid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.querier.v1.SelectSeriesRequest} returns this
 */
proto.querier.v1.SelectSeriesRequest.prototype.setProfileTypeid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string label_selector = 2;
 * @return {string}
 */
proto.querier.v1.SelectSeriesRequest.prototype.getLabelSelector = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.querier.v1.SelectSeriesRequest} returns this
 */
proto.querier.v1.SelectSeriesRequest.prototype.setLabelSelector = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 start = 3;
 * @return {number}
 */
proto.querier.v1.SelectSeriesRequest.prototype.getStart = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.querier.v1.SelectSeriesRequest} returns this
 */
proto.querier.v1.SelectSeriesRequest.prototype.setStart = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 end = 4;
 * @return {number}
 */
proto.querier.v1.SelectSeriesRequest.prototype.getEnd = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.querier.v1.SelectSeriesRequest} returns this
 */
proto.querier.v1.SelectSeriesRequest.prototype.setEnd = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * repeated string group_by = 5;
 * @return {!Array<string>}
 */
proto.querier.v1.SelectSeriesRequest.prototype.getGroupByList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.querier.v1.SelectSeriesRequest} returns this
 */
proto.querier.v1.SelectSeriesRequest.prototype.setGroupByList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.querier.v1.SelectSeriesRequest} returns this
 */
proto.querier.v1.SelectSeriesRequest.prototype.addGroupBy = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.querier.v1.SelectSeriesRequest} returns this
 */
proto.querier.v1.SelectSeriesRequest.prototype.clearGroupByList = function() {
  return this.setGroupByList([]);
};


/**
 * optional double step = 6;
 * @return {number}
 */
proto.querier.v1.SelectSeriesRequest.prototype.getStep = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.querier.v1.SelectSeriesRequest} returns this
 */
proto.querier.v1.SelectSeriesRequest.prototype.setStep = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional types.v1.TimeSeriesAggregationType aggregation = 7;
 * @return {!proto.types.v1.TimeSeriesAggregationType}
 */
proto.querier.v1.SelectSeriesRequest.prototype.getAggregation = function() {
  return /** @type {!proto.types.v1.TimeSeriesAggregationType} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {!proto.types.v1.TimeSeriesAggregationType} value
 * @return {!proto.querier.v1.SelectSeriesRequest} returns this
 */
proto.querier.v1.SelectSeriesRequest.prototype.setAggregation = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.querier.v1.SelectSeriesRequest} returns this
 */
proto.querier.v1.SelectSeriesRequest.prototype.clearAggregation = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.querier.v1.SelectSeriesRequest.prototype.hasAggregation = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional types.v1.StackTraceSelector stack_trace_selector = 8;
 * @return {?proto.types.v1.StackTraceSelector}
 */
proto.querier.v1.SelectSeriesRequest.prototype.getStackTraceSelector = function() {
  return /** @type{?proto.types.v1.StackTraceSelector} */ (
    jspb.Message.getWrapperField(this, types_v1_types_pb.StackTraceSelector, 8));
};


/**
 * @param {?proto.types.v1.StackTraceSelector|undefined} value
 * @return {!proto.querier.v1.SelectSeriesRequest} returns this
*/
proto.querier.v1.SelectSeriesRequest.prototype.setStackTraceSelector = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.querier.v1.SelectSeriesRequest} returns this
 */
proto.querier.v1.SelectSeriesRequest.prototype.clearStackTraceSelector = function() {
  return this.setStackTraceSelector(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.querier.v1.SelectSeriesRequest.prototype.hasStackTraceSelector = function() {
  return jspb.Message.getField(this, 8) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.querier.v1.SelectSeriesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.querier.v1.SelectSeriesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.querier.v1.SelectSeriesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.querier.v1.SelectSeriesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.querier.v1.SelectSeriesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    seriesList: jspb.Message.toObjectList(msg.getSeriesList(),
    types_v1_types_pb.Series.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.querier.v1.SelectSeriesResponse}
 */
proto.querier.v1.SelectSeriesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.querier.v1.SelectSeriesResponse;
  return proto.querier.v1.SelectSeriesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.querier.v1.SelectSeriesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.querier.v1.SelectSeriesResponse}
 */
proto.querier.v1.SelectSeriesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new types_v1_types_pb.Series;
      reader.readMessage(value,types_v1_types_pb.Series.deserializeBinaryFromReader);
      msg.addSeries(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.querier.v1.SelectSeriesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.querier.v1.SelectSeriesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.querier.v1.SelectSeriesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.querier.v1.SelectSeriesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSeriesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      types_v1_types_pb.Series.serializeBinaryToWriter
    );
  }
};


/**
 * repeated types.v1.Series series = 1;
 * @return {!Array<!proto.types.v1.Series>}
 */
proto.querier.v1.SelectSeriesResponse.prototype.getSeriesList = function() {
  return /** @type{!Array<!proto.types.v1.Series>} */ (
    jspb.Message.getRepeatedWrapperField(this, types_v1_types_pb.Series, 1));
};


/**
 * @param {!Array<!proto.types.v1.Series>} value
 * @return {!proto.querier.v1.SelectSeriesResponse} returns this
*/
proto.querier.v1.SelectSeriesResponse.prototype.setSeriesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.types.v1.Series=} opt_value
 * @param {number=} opt_index
 * @return {!proto.types.v1.Series}
 */
proto.querier.v1.SelectSeriesResponse.prototype.addSeries = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.types.v1.Series, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.querier.v1.SelectSeriesResponse} returns this
 */
proto.querier.v1.SelectSeriesResponse.prototype.clearSeriesList = function() {
  return this.setSeriesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.querier.v1.AnalyzeQueryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.querier.v1.AnalyzeQueryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.querier.v1.AnalyzeQueryRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.querier.v1.AnalyzeQueryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    start: jspb.Message.getFieldWithDefault(msg, 2, 0),
    end: jspb.Message.getFieldWithDefault(msg, 3, 0),
    query: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.querier.v1.AnalyzeQueryRequest}
 */
proto.querier.v1.AnalyzeQueryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.querier.v1.AnalyzeQueryRequest;
  return proto.querier.v1.AnalyzeQueryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.querier.v1.AnalyzeQueryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.querier.v1.AnalyzeQueryRequest}
 */
proto.querier.v1.AnalyzeQueryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStart(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEnd(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuery(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.querier.v1.AnalyzeQueryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.querier.v1.AnalyzeQueryRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.querier.v1.AnalyzeQueryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.querier.v1.AnalyzeQueryRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStart();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getEnd();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getQuery();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional int64 start = 2;
 * @return {number}
 */
proto.querier.v1.AnalyzeQueryRequest.prototype.getStart = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.querier.v1.AnalyzeQueryRequest} returns this
 */
proto.querier.v1.AnalyzeQueryRequest.prototype.setStart = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 end = 3;
 * @return {number}
 */
proto.querier.v1.AnalyzeQueryRequest.prototype.getEnd = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.querier.v1.AnalyzeQueryRequest} returns this
 */
proto.querier.v1.AnalyzeQueryRequest.prototype.setEnd = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string query = 4;
 * @return {string}
 */
proto.querier.v1.AnalyzeQueryRequest.prototype.getQuery = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.querier.v1.AnalyzeQueryRequest} returns this
 */
proto.querier.v1.AnalyzeQueryRequest.prototype.setQuery = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.querier.v1.AnalyzeQueryResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.querier.v1.AnalyzeQueryResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.querier.v1.AnalyzeQueryResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.querier.v1.AnalyzeQueryResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.querier.v1.AnalyzeQueryResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    queryScopesList: jspb.Message.toObjectList(msg.getQueryScopesList(),
    proto.querier.v1.QueryScope.toObject, includeInstance),
    queryImpact: (f = msg.getQueryImpact()) && proto.querier.v1.QueryImpact.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.querier.v1.AnalyzeQueryResponse}
 */
proto.querier.v1.AnalyzeQueryResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.querier.v1.AnalyzeQueryResponse;
  return proto.querier.v1.AnalyzeQueryResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.querier.v1.AnalyzeQueryResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.querier.v1.AnalyzeQueryResponse}
 */
proto.querier.v1.AnalyzeQueryResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.querier.v1.QueryScope;
      reader.readMessage(value,proto.querier.v1.QueryScope.deserializeBinaryFromReader);
      msg.addQueryScopes(value);
      break;
    case 2:
      var value = new proto.querier.v1.QueryImpact;
      reader.readMessage(value,proto.querier.v1.QueryImpact.deserializeBinaryFromReader);
      msg.setQueryImpact(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.querier.v1.AnalyzeQueryResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.querier.v1.AnalyzeQueryResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.querier.v1.AnalyzeQueryResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.querier.v1.AnalyzeQueryResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQueryScopesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.querier.v1.QueryScope.serializeBinaryToWriter
    );
  }
  f = message.getQueryImpact();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.querier.v1.QueryImpact.serializeBinaryToWriter
    );
  }
};


/**
 * repeated QueryScope query_scopes = 1;
 * @return {!Array<!proto.querier.v1.QueryScope>}
 */
proto.querier.v1.AnalyzeQueryResponse.prototype.getQueryScopesList = function() {
  return /** @type{!Array<!proto.querier.v1.QueryScope>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.querier.v1.QueryScope, 1));
};


/**
 * @param {!Array<!proto.querier.v1.QueryScope>} value
 * @return {!proto.querier.v1.AnalyzeQueryResponse} returns this
*/
proto.querier.v1.AnalyzeQueryResponse.prototype.setQueryScopesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.querier.v1.QueryScope=} opt_value
 * @param {number=} opt_index
 * @return {!proto.querier.v1.QueryScope}
 */
proto.querier.v1.AnalyzeQueryResponse.prototype.addQueryScopes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.querier.v1.QueryScope, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.querier.v1.AnalyzeQueryResponse} returns this
 */
proto.querier.v1.AnalyzeQueryResponse.prototype.clearQueryScopesList = function() {
  return this.setQueryScopesList([]);
};


/**
 * optional QueryImpact query_impact = 2;
 * @return {?proto.querier.v1.QueryImpact}
 */
proto.querier.v1.AnalyzeQueryResponse.prototype.getQueryImpact = function() {
  return /** @type{?proto.querier.v1.QueryImpact} */ (
    jspb.Message.getWrapperField(this, proto.querier.v1.QueryImpact, 2));
};


/**
 * @param {?proto.querier.v1.QueryImpact|undefined} value
 * @return {!proto.querier.v1.AnalyzeQueryResponse} returns this
*/
proto.querier.v1.AnalyzeQueryResponse.prototype.setQueryImpact = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.querier.v1.AnalyzeQueryResponse} returns this
 */
proto.querier.v1.AnalyzeQueryResponse.prototype.clearQueryImpact = function() {
  return this.setQueryImpact(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.querier.v1.AnalyzeQueryResponse.prototype.hasQueryImpact = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.querier.v1.QueryScope.prototype.toObject = function(opt_includeInstance) {
  return proto.querier.v1.QueryScope.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.querier.v1.QueryScope} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.querier.v1.QueryScope.toObject = function(includeInstance, msg) {
  var f, obj = {
    componentType: jspb.Message.getFieldWithDefault(msg, 1, ""),
    componentCount: jspb.Message.getFieldWithDefault(msg, 2, 0),
    blockCount: jspb.Message.getFieldWithDefault(msg, 3, 0),
    seriesCount: jspb.Message.getFieldWithDefault(msg, 4, 0),
    profileCount: jspb.Message.getFieldWithDefault(msg, 5, 0),
    sampleCount: jspb.Message.getFieldWithDefault(msg, 6, 0),
    indexBytes: jspb.Message.getFieldWithDefault(msg, 7, 0),
    profileBytes: jspb.Message.getFieldWithDefault(msg, 8, 0),
    symbolBytes: jspb.Message.getFieldWithDefault(msg, 9, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.querier.v1.QueryScope}
 */
proto.querier.v1.QueryScope.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.querier.v1.QueryScope;
  return proto.querier.v1.QueryScope.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.querier.v1.QueryScope} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.querier.v1.QueryScope}
 */
proto.querier.v1.QueryScope.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setComponentType(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setComponentCount(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBlockCount(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSeriesCount(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setProfileCount(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSampleCount(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setIndexBytes(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setProfileBytes(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSymbolBytes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.querier.v1.QueryScope.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.querier.v1.QueryScope.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.querier.v1.QueryScope} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.querier.v1.QueryScope.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getComponentType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getComponentCount();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getBlockCount();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getSeriesCount();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getProfileCount();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = message.getSampleCount();
  if (f !== 0) {
    writer.writeUint64(
      6,
      f
    );
  }
  f = message.getIndexBytes();
  if (f !== 0) {
    writer.writeUint64(
      7,
      f
    );
  }
  f = message.getProfileBytes();
  if (f !== 0) {
    writer.writeUint64(
      8,
      f
    );
  }
  f = message.getSymbolBytes();
  if (f !== 0) {
    writer.writeUint64(
      9,
      f
    );
  }
};


/**
 * optional string component_type = 1;
 * @return {string}
 */
proto.querier.v1.QueryScope.prototype.getComponentType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.querier.v1.QueryScope} returns this
 */
proto.querier.v1.QueryScope.prototype.setComponentType = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 component_count = 2;
 * @return {number}
 */
proto.querier.v1.QueryScope.prototype.getComponentCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.querier.v1.QueryScope} returns this
 */
proto.querier.v1.QueryScope.prototype.setComponentCount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 block_count = 3;
 * @return {number}
 */
proto.querier.v1.QueryScope.prototype.getBlockCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.querier.v1.QueryScope} returns this
 */
proto.querier.v1.QueryScope.prototype.setBlockCount = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint64 series_count = 4;
 * @return {number}
 */
proto.querier.v1.QueryScope.prototype.getSeriesCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.querier.v1.QueryScope} returns this
 */
proto.querier.v1.QueryScope.prototype.setSeriesCount = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint64 profile_count = 5;
 * @return {number}
 */
proto.querier.v1.QueryScope.prototype.getProfileCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.querier.v1.QueryScope} returns this
 */
proto.querier.v1.QueryScope.prototype.setProfileCount = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint64 sample_count = 6;
 * @return {number}
 */
proto.querier.v1.QueryScope.prototype.getSampleCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.querier.v1.QueryScope} returns this
 */
proto.querier.v1.QueryScope.prototype.setSampleCount = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional uint64 index_bytes = 7;
 * @return {number}
 */
proto.querier.v1.QueryScope.prototype.getIndexBytes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.querier.v1.QueryScope} returns this
 */
proto.querier.v1.QueryScope.prototype.setIndexBytes = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional uint64 profile_bytes = 8;
 * @return {number}
 */
proto.querier.v1.QueryScope.prototype.getProfileBytes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.querier.v1.QueryScope} returns this
 */
proto.querier.v1.QueryScope.prototype.setProfileBytes = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional uint64 symbol_bytes = 9;
 * @return {number}
 */
proto.querier.v1.QueryScope.prototype.getSymbolBytes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.querier.v1.QueryScope} returns this
 */
proto.querier.v1.QueryScope.prototype.setSymbolBytes = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.querier.v1.QueryImpact.prototype.toObject = function(opt_includeInstance) {
  return proto.querier.v1.QueryImpact.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.querier.v1.QueryImpact} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.querier.v1.QueryImpact.toObject = function(includeInstance, msg) {
  var f, obj = {
    totalBytesInTimeRange: jspb.Message.getFieldWithDefault(msg, 2, 0),
    totalQueriedSeries: jspb.Message.getFieldWithDefault(msg, 3, 0),
    deduplicationNeeded: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.querier.v1.QueryImpact}
 */
proto.querier.v1.QueryImpact.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.querier.v1.QueryImpact;
  return proto.querier.v1.QueryImpact.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.querier.v1.QueryImpact} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.querier.v1.QueryImpact}
 */
proto.querier.v1.QueryImpact.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTotalBytesInTimeRange(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTotalQueriedSeries(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDeduplicationNeeded(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.querier.v1.QueryImpact.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.querier.v1.QueryImpact.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.querier.v1.QueryImpact} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.querier.v1.QueryImpact.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTotalBytesInTimeRange();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getTotalQueriedSeries();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getDeduplicationNeeded();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional uint64 total_bytes_in_time_range = 2;
 * @return {number}
 */
proto.querier.v1.QueryImpact.prototype.getTotalBytesInTimeRange = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.querier.v1.QueryImpact} returns this
 */
proto.querier.v1.QueryImpact.prototype.setTotalBytesInTimeRange = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 total_queried_series = 3;
 * @return {number}
 */
proto.querier.v1.QueryImpact.prototype.getTotalQueriedSeries = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.querier.v1.QueryImpact} returns this
 */
proto.querier.v1.QueryImpact.prototype.setTotalQueriedSeries = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional bool deduplication_needed = 4;
 * @return {boolean}
 */
proto.querier.v1.QueryImpact.prototype.getDeduplicationNeeded = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.querier.v1.QueryImpact} returns this
 */
proto.querier.v1.QueryImpact.prototype.setDeduplicationNeeded = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * @enum {number}
 */
proto.querier.v1.ProfileFormat = {
  PROFILE_FORMAT_UNSPECIFIED: 0,
  PROFILE_FORMAT_FLAMEGRAPH: 1,
  PROFILE_FORMAT_TREE: 2
};

goog.object.extend(exports, proto.querier.v1);
